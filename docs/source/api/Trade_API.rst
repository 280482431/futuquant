========
交易API
========

----------------------------

一分钟上手
============

如下范例，创建api交易对象，先调用unlock_trade对交易解锁，然后调用place_order下单，以700.0价格，买100股腾讯00700,最后关闭对象

.. code:: python

	from futuquant import *
	pwd_unlock = '123456'
	trd_ctx = OpenHKTradeContext(host='127.0.0.1', port=11111)
	print(trd_ctx.unlock_trade(pwd_unlock))
	print(place_order(price=700.0, qyt=100, code="HK.00700", trd_side=TrdSide.SELL))
	quote_ctx.close()
	
----------------------------


接口类对象
==========

-------------------------------------------

TradeOrderHandlerBase - 订单状态变化回调处理基类
------------------------------------------------

-------------------------------------------

on_recv_rsp
~~~~~~~~~~~

on_recv_rsp(self, rsp_pb) - 订单状态变化回调处理函数

**描述:**：

这里增加文字

**参数:**


**返回值**:

(ret_code, content)

**示例代码:**

.. code:: python

  from futuquant import *
  trd_ctx = OpenHKTradeContext(host='127.0.0.1', port=11111)
  ....
	trd_ctx.close()
	
----------------------------

TradeDealHandlerBase - 订单成交回调处理基类
-------------------------------------------

-------------------------------------------

on_recv_rsp
~~~~~~~~~~~

on_recv_rsp(self, rsp_pb) - 订单成交回调处理函数

**描述:**：

这里增加文字

**参数:**


**返回值**:

(ret_code, content)

**示例代码:**

.. code:: python
  
  from futuquant import *
  trd_ctx = OpenHKTradeContext(host='127.0.0.1', port=11111)
  ....
	trd_ctx.close()
	
----------------------------

OpenHKTradeContext、OpenUSTradeContext - 交易请求对象类
-------------------------------------------

----------------------------

get_acc_list - xxxx
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

get_acc_list(self):

**描述**：

这里增加文字

**参数**

+-------------+------------+------------+
| 名称        | 类型       | 说明       |
+=============+============+============+
|             |            |            |
+-------------+------------+------------+
|             | str        |            |
+-------------+------------+------------+

**返回值**:

(ret_code, content)

ret_code为RET_OK 时, content为pandas.DataFrame,否则为错误字符串


+-------------+------------+------------+
| df列名      | 类型       | 说明       |
+=============+============+============+
|             | str        |            |
+-------------+------------+------------+
|             | str        |            |
+-------------+------------+------------+


**示例代码:**

.. code:: python

  from futuquant import *
  trd_ctx = OpenHKTradeContext(host='127.0.0.1', port=11111)
  ....
	trd_ctx.close()
	
---------------------------------------------------------------------
	
接口限频
========

---------------------------------------------------------------------

交易相关请求到达网关客户端后， 会转发请求到futu后台服务器，为控制流量，会对请求频率加以控制，
目前的控制频率为每30秒最多请求10次，相关接口如下:


+ **history_order_list_query**


---------------------------------------------------------------------






